"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var display_processor_1 = require("../display-processor");
var SummaryProcessor = (function (_super) {
    __extends(SummaryProcessor, _super);
    function SummaryProcessor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SummaryProcessor.prototype.displaySummary = function (spec, log, metrics) {
        var summaryHtml = log + "\n    <table id=\"summary-table\" class=\"summary\">\n      <caption>Report summary";
        if (this.configuration.summary.displayDuration) {
            summaryHtml += " - Total execution time: " + metrics.duration;
        }
        summaryHtml += "</caption>\n      <thead><tr><td>Status</td><td>Spec Count</td></tr></thead>\n      <tr id=\"summary-success\"><td>Success</td><td>" + metrics.successfulSpecs + "</td></tr>\n      <tr id=\"summary-failed\"><td>Failed</td><td>" + metrics.failedSpecs + "</td></tr>\n      <tr id=\"summary-pending\"><td>Pending</td><td>" + metrics.pendingSpecs + "</td></tr>\n      <tr id=\"summary-skipped\"><td>Skipped</td><td>" + metrics.skippedSpecs + "</td></tr>\n      <tr id=\"summary-total\" class=\"total\"><td>Total defined</td><td>" + metrics.totalSpecsDefined + "</td></tr>\n      <tr id=\"summary-executed\"><td>Executed</td><td>" + metrics.executedSpecs + "</td></tr>\n    </table>\n    ";
        return summaryHtml;
    };
    return SummaryProcessor;
}(display_processor_1.DisplayProcessor));
exports.SummaryProcessor = SummaryProcessor;
//# sourceMappingURL=summary-processor.js.map